plugins {
	id 'org.springframework.boot' version '2.6.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.archifire'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}

	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

def mapstructVersion = '1.5.0.Beta2'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
	}
	implementation ('org.springframework.boot:spring-boot-starter-undertow') {
		exclude group: 'io.undertow', module: 'undertow-websockets-jsr'
	}
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//log4j
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'

	//Java bean mappings
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
}

bootJar {
	archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

jar {
	enabled = false
}

test {
	useJUnitPlatform()
}
